// Check if bit X is 1
// ex. if(PA0)
replace {
    mov a, %1
    and a, #0x01
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #0 is 1 optimization.
    t1sn	%1, #0
    goto	%2
}
replace {
    mov a, %1
    and a, #0x02
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #1 is 1 optimization.
    t1sn	%1, #1
    goto	%2
}
replace {
    mov a, %1
    and a, #0x04
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #2 is 1 optimization.
    t1sn	%1, #2
    goto	%2
}
replace {
    mov a, %1
    and a, #0x08
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #3 is 1 optimization.
    t1sn	%1, #3
    goto	%2
}
replace {
    mov a, %1
    and a, #0x10
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #4 is 1 optimization.
    t1sn	%1, #4
    goto	%2
}
replace {
    mov a, %1
    and a, #0x20
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #5 is 1 optimization.
    t1sn	%1, #5
    goto	%2
}
replace {
    mov a, %1
    and a, #0x40
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #6 is 1 optimization.
    t1sn	%1, #6
    goto	%2
}
replace {
    mov a, %1
    and a, #0x80
    cneqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #7 is 1 optimization.
    t1sn	%1, #7
    goto	%2
}

//Check if bit X is 0
replace {
    mov a, %1
    and a, #0x01
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #0 is 0 optimization.
    t0sn	%1, #0
    goto	%2
}
replace {
    mov a, %1
    and a, #0x02
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #1 is 0 optimization.
    t0sn	%1, #1
    goto	%2
}
replace {
    mov a, %1
    and a, #0x04
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #2 is 0 optimization.
    t0sn	%1, #2
    goto	%2
}
replace {
    mov a, %1
    and a, #0x08
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #3 is 0 optimization.
    t0sn	%1, #3
    goto	%2
}
replace {
    mov a, %1
    and a, #0x10
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #4 is 0 optimization.
    t0sn	%1, #4
    goto	%2
}
replace {
    mov a, %1
    and a, #0x20
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #5 is 0 optimization.
    t0sn	%1, #5
    goto	%2
}
replace {
    mov a, %1
    and a, #0x40
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #6 is 0 optimization.
    t0sn	%1, #6
    goto	%2
}
replace {
    mov a, %1
    and a, #0x80
    ceqsn a, #0x00
    goto %2
} by {
    ; peephole Check bit #7 is 0 optimization.
    t0sn	%1, #7
    goto	%2
}

// *** SET_BITMASK optimization

replace {
	mov	a, %1
	or	a, #0x01
	mov	%1, a
} by {
    ; peephole SET_BITMASK optimization.
    set1 %1, #0
}
replace {
	mov	a, %1
	or	a, #0x02
	mov	%1, a
} by {
    ; peephole SET_BITMASK optimization.
    set1 %1, #1
}

replace {
	mov	a, %1
	or	a, #0x04
	mov	%1, a
} by {
    ; peephole SET_BITMASK optimization.
    set1 %1, #2
}
replace {
	mov	a, %1
	or	a, #0x08
	mov	%1, a
} by {
    ; peephole SET_BITMASK optimization.
    set1 %1, #3
}

// *** CLR_BITMASK optimization

replace {
	mov	a, #0xfd
	and	%1, a
} by {
    ; peephole CLR_BITMASK optimization.
    set0 %1, #0
}

//I2CData = (I2CData << 1) | (SDA);
replace {
    mov	a, %1
	mov	p, a
	sl	p
	mov	a, __pa
	and	a, #0x01
	or	a, p
	mov	%1, a
} by {
    swapc __pa, #0
    slc %1
}

//if(TimeoutCount & 0x400) {
replace {
	mov	a, _TimeoutCount+1
	mov	p, a
	mov	a, _TimeoutCount+0
	t1sn	p, #2
	goto	%1
} by {
    t1sn	_TimeoutCount+1, #2
    goto	%1
}


// ** OLD ones 
// I2CData = (I2CData << 1) | (SDA);
//Clear carry flag with set0 __flag, #1, nedeed ?
//replace {//    mov	a, _I2CData+0
//	mov	p, a
//	sl	p
//	mov	a, __pa
//	and	a, #0x01
//	or	a, p
//	mov	_I2CData+0, a
//} by {
//    ; peephole SDA pulling optimization
//    set0 __flag, #1  
//    t0sn    __pa, #0
//    set1 __flag, #1
//    slc _I2CData+0
//}
//replace {
//    mov	a, %1
//	mov	p, a
//	sl	p
//	mov	a, __pa
//	and	a, #0x01
//	or	a, p
//	mov	%1, a
//} by {
//    ; peephole SDA pulling optimization
//    set0 __flag, #1  
//    t0sn    __pa, #0
//    set1 __flag, #1
//    slc %1
//}

